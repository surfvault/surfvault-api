provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, "dev"}
  versionFunctions: false
  stackName: "${self:service}-${self:provider.stage}-cf"
  stackTags:
    applicationName: surf-vault-api
  tags:
    ApplicationName: surf-vault-api
  logRetentionInDays: 180

  environment: 
    STAGE: ${self:provider.stage}
    UPDATE_S3_PHOTOGRAPHER_HANDLE_SQS_QUEUE_URL: https://sqs.us-east-1.amazonaws.com/588738616160/user-service-dev-cf-updateS3PhotographerHandle
    UPDATE_S3_PHOTOGRAPHER_ACCESS_SQS_QUEUE_URL: https://sqs.us-east-1.amazonaws.com/588738616160/user-service-dev-cf-updateS3PhotographerAccess
    SAVE_SURF_MEDIA_BATCH_SQS_QUEUE_URL: https://sqs.us-east-1.amazonaws.com/588738616160/surf-service-dev-cf-saveSurfMediaBatch
    AWS_KEY_ID: ${env:AWS_KEY_ID}
    AWS_KEY_SECRET: ${env:AWS_KEY_SECRET}
    PUSHER_APP_ID: ${env:PUSHER_APP_ID}
    PUSHER_APP_KEY: ${env:PUSHER_APP_KEY}
    PUSHER_APP_SECRET: ${env:PUSHER_APP_SECRET}
    PUSHER_APP_CLUSTER: ${env:PUSHER_APP_CLUSTER}
      
  iam:
    role:
      managedPolicies:
        - arn:aws:iam::aws:policy/CloudWatchEventsFullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      statements: 
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
            - s3:DeleteObject
          Resource:
            - "arn:aws:s3:::${self:provider.stage}-surf"
            - "arn:aws:s3:::${self:provider.stage}-surf/*"
            - "arn:aws:s3:::${self:provider.stage}-surf-private"
            - "arn:aws:s3:::${self:provider.stage}-surf-private/*"
            - "arn:aws:s3:::${self:provider.stage}-surf-profile"
            - "arn:aws:s3:::${self:provider.stage}-surf-profile/*"
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.stage}-Users"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.stage}-SurfPhotos"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.stage}-SurfBreaks"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.stage}-Conversations"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.stage}-Messages"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.stage}-Notifications"
        - Effect: "Allow"
          Action:
            - "sqs:SendMessage"
            - "sqs:ReceiveMessage"
            - "sqs:DeleteMessage"
            - "sqs:GetQueueAttributes"
            - "sqs:GetQueueUrl"
          Resource: "arn:aws:sqs:${self:provider.region}:*:*"

  httpApi:
    cors: true